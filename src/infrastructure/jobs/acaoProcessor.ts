// src/infrastructure/jobs/acaoProcessor.ts

import { acaoQueue } from "../../queue";
import { Job } from "bull";
import nodemailer from "nodemailer";
import dotenv from "dotenv";
dotenv.config();

async function iniciarProcessador() {
  const testAccount = await nodemailer.createTestAccount();

  const transporter = nodemailer.createTransport({
    service: "gmail",
    auth: {
      user: process.env.GMAIL_USER,
      pass: process.env.GMAIL_PASS,
    },
  });

  console.log("üì® Conta Ethereal pronta!");
  console.log("üîê Login:", testAccount.user);
  console.log("üîë Senha:", testAccount.pass);

  acaoQueue.process(async (job: Job) => {
    try {
      console.log("üì© Processando job", job.id);

      const {
        colaboradorEmail,
        nomeColaborador,
        cargoColaborador,
        tipo,
        acaoTitulo,
        acaoDescricao,
      } = job.data;

      if (tipo === "email") {
        const mailOptions = {
          from: '"Equipe Eva" <noreply@eva.com>',
          to: colaboradorEmail,
          subject: acaoTitulo, // Agora usa o t√≠tulo da a√ß√£o
          text: acaoDescricao, // Agora usa a descri√ß√£o da a√ß√£o
          /* subject: acaoTitulo || "Bem-vindo √† jornada",
          text:
            acaoDescricao ||
            `Ol√° ${nomeColaborador}, seja muito bem-vindo! Daremos in√≠cio √† sua nova fase no cargo de ${cargoColaborador}.`, */
        };

        const info = await transporter.sendMail(mailOptions);

        console.log("‚úâÔ∏è E-mail enviado:", info.messageId);
        console.log("üîó Visualize aqui:", nodemailer.getTestMessageUrl(info));
      } else if (tipo === "whatsapp") {
        console.log("üì± √â whatsapp!");
        console.log(
          `Mensagem para ${nomeColaborador} (${cargoColaborador}): ${acaoDescricao}`
        );
        // Aqui futuramente voc√™ pode acionar uma API como Twilio ou Z-API
      } else {
        console.warn("‚ùó Tipo de a√ß√£o n√£o reconhecido:", tipo);
      }
    } catch (error) {
      console.error("‚ùå Erro no processamento do job:", error);
      throw error;
    }
  });
}

iniciarProcessador();
